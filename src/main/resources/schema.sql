drop table IF EXISTS mpa cascade ;
drop table IF EXISTS users cascade;
drop table IF EXISTS films cascade;
drop table IF EXISTS likes cascade;
drop table IF EXISTS film_genre cascade;
drop table IF EXISTS friends cascade;

create table if not exists mpa (
    mpa_id int generated by default as identity primary key,
    mpa_name varchar(64)
);

create table if not exists users (
    user_id int generated by default as identity primary key,
    email varchar(64),
    name varchar(64),
    login varchar(64),
    birthday date
);

create table if not exists films (
    film_id int generated by default as identity primary key,
    name varchar(64),
    description varchar(64),
    releaseDate date,
    duration int,
    raiting_id int REFERENCES mpa (mpa_id) ON DELETE RESTRICT
);


create table if not exists likes (
     film_id int REFERENCES films (film_id) ON DELETE CASCADE,
     user_id int REFERENCES users (user_id) ON DELETE CASCADE,
     primary key(film_id,user_id)
);

create table if not exists genre (
    genre_id int generated by default as identity primary key,
    genre_name varchar(64)
);

create table if not exists film_genre (
     film_id int REFERENCES films (film_id) ON DELETE CASCADE,
     genre_id int REFERENCES genre (genre_id) ON DELETE CASCADE,
     primary key(film_id,genre_id)
);

create table if not exists friends (
     user_id int REFERENCES users (user_id) ON DELETE CASCADE,
     friends_id int REFERENCES users (user_id) ON DELETE CASCADE,
     primary key(user_id,friends_id)
);
